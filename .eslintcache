[{"/Users/Joe/Desktop/NucampFolder/3-React/nucampsite/src/index.js":"1","/Users/Joe/Desktop/NucampFolder/3-React/nucampsite/src/reportWebVitals.js":"2","/Users/Joe/Desktop/NucampFolder/3-React/nucampsite/src/App.js":"3","/Users/Joe/Desktop/NucampFolder/3-React/nucampsite/src/components/DirectoryComponent.js":"4","/Users/Joe/Desktop/NucampFolder/3-React/nucampsite/src/components/CampsiteInfoComponent.js":"5","/Users/Joe/Desktop/NucampFolder/3-React/nucampsite/src/shared/campsites.js":"6","/Users/Joe/Desktop/NucampFolder/3-React/nucampsite/src/components/MainComponent.js":"7","/Users/Joe/Desktop/NucampFolder/3-React/nucampsite/src/components/HeaderComponent.js":"8","/Users/Joe/Desktop/NucampFolder/3-React/nucampsite/src/components/FooterComponent.js":"9","/Users/Joe/Desktop/NucampFolder/3-React/nucampsite/src/components/HomeComponent.js":"10","/Users/Joe/Desktop/NucampFolder/3-React/nucampsite/src/components/ContactComponent.js":"11","/Users/Joe/Desktop/NucampFolder/3-React/nucampsite/src/shared/partners.js":"12","/Users/Joe/Desktop/NucampFolder/3-React/nucampsite/src/shared/promotions.js":"13","/Users/Joe/Desktop/NucampFolder/3-React/nucampsite/src/shared/comments.js":"14","/Users/Joe/Desktop/NucampFolder/3-React/nucampsite/src/components/AboutComponent.js":"15","/Users/Joe/Desktop/NucampFolder/3-React/nucampsite/src/redux/configureStore.js":"16","/Users/Joe/Desktop/NucampFolder/3-React/nucampsite/src/redux/promotions.js":"17","/Users/Joe/Desktop/NucampFolder/3-React/nucampsite/src/redux/campsites.js":"18","/Users/Joe/Desktop/NucampFolder/3-React/nucampsite/src/redux/partners.js":"19","/Users/Joe/Desktop/NucampFolder/3-React/nucampsite/src/redux/comments.js":"20","/Users/Joe/Desktop/NucampFolder/3-React/nucampsite/src/redux/ActionCreators.js":"21","/Users/Joe/Desktop/NucampFolder/3-React/nucampsite/src/redux/ActionTypes.js":"22","/Users/Joe/Desktop/NucampFolder/3-React/nucampsite/src/components/LoadingComponent.js":"23","/Users/Joe/Desktop/NucampFolder/3-React/nucampsite/src/redux/forms.js":"24","/Users/Joe/Desktop/NucampFolder/3-React/nucampsite/src/shared/baseUrl.js":"25"},{"size":696,"mtime":1609146590595,"results":"26","hashOfConfig":"27"},{"size":362,"mtime":1608544218159,"results":"28","hashOfConfig":"27"},{"size":640,"mtime":1610013452020,"results":"29","hashOfConfig":"27"},{"size":2047,"mtime":1610536942906,"results":"30","hashOfConfig":"27"},{"size":9046,"mtime":1610537835141,"results":"31","hashOfConfig":"27"},{"size":1242,"mtime":1609239800589,"results":"32","hashOfConfig":"27"},{"size":3547,"mtime":1610536261799,"results":"33","hashOfConfig":"27"},{"size":5223,"mtime":1610539348528,"results":"34","hashOfConfig":"27"},{"size":1914,"mtime":1609151291785,"results":"35","hashOfConfig":"27"},{"size":1505,"mtime":1610544172057,"results":"36","hashOfConfig":"27"},{"size":11144,"mtime":1610468557129,"results":"37","hashOfConfig":"27"},{"size":1022,"mtime":1610539882238,"results":"38","hashOfConfig":"27"},{"size":303,"mtime":1609239849048,"results":"39","hashOfConfig":"27"},{"size":4243,"mtime":1609239831328,"results":"40","hashOfConfig":"27"},{"size":4094,"mtime":1609610907213,"results":"41","hashOfConfig":"27"},{"size":790,"mtime":1610468271085,"results":"42","hashOfConfig":"27"},{"size":696,"mtime":1610536008286,"results":"43","hashOfConfig":"27"},{"size":621,"mtime":1610463081411,"results":"44","hashOfConfig":"27"},{"size":182,"mtime":1610394584255,"results":"45","hashOfConfig":"27"},{"size":671,"mtime":1610535846913,"results":"46","hashOfConfig":"27"},{"size":3434,"mtime":1610545475851,"results":"47","hashOfConfig":"27"},{"size":445,"mtime":1610535230150,"results":"48","hashOfConfig":"27"},{"size":234,"mtime":1610466083560,"results":"49","hashOfConfig":"27"},{"size":166,"mtime":1610468035517,"results":"50","hashOfConfig":"27"},{"size":48,"mtime":1610535148482,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1xai3ta",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"/Users/Joe/Desktop/NucampFolder/3-React/nucampsite/src/index.js",[],["107","108"],"/Users/Joe/Desktop/NucampFolder/3-React/nucampsite/src/reportWebVitals.js",[],"/Users/Joe/Desktop/NucampFolder/3-React/nucampsite/src/App.js",[],"/Users/Joe/Desktop/NucampFolder/3-React/nucampsite/src/components/DirectoryComponent.js",[],"/Users/Joe/Desktop/NucampFolder/3-React/nucampsite/src/components/CampsiteInfoComponent.js",["109","110","111"],"import React, { Component }  from 'react';\nimport { Card, CardImg, CardText, CardBody, Breadcrumb, BreadcrumbItem, Button,\n    Modal, ModalHeader, ModalBody, Label  } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPencilAlt } from '@fortawesome/free-solid-svg-icons';\nimport { Link } from 'react-router-dom';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\n\nconst required = val => val && val.length;\nconst maxLength = len => val => !val || (val.length <= len);\nconst minLength = len => val => val && (val.length >= len);\nconst onChange = val => val && val > \"0\";\n\n\n\nclass CommentForm extends Component {\n    constructor(props) {\n        super(props);\n     this.state = {\n            rating: '',\n            author: '',\n            text: '',\n            touched: {\n                author: false,\n            },\n        isModalOpen: false \n        };     \n    }\n\n    toggleModal = () => {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n    }\n\n\n    handleSubmit = (values) => {\n                this.toggleModal();\n                this.props.addComment(this.props.campsiteId, values.rating, values.author, values.text) \n            }\n\n\n    render (){ \n        return (\n            <React.Fragment>\n                <Button outline className=\"fa-lg\" onClick={this.toggleModal}><FontAwesomeIcon icon={faPencilAlt} />{'  '}Submit Comment</Button>  \n                <ShowModal state={this.state} handleSubmit={this.handleSubmit} />\n            </React.Fragment>\n\n        )         \n    } \n\n}\n\n\nfunction ShowModal(props) {\n    return (\n    <Modal isOpen={props.state.isModalOpen}>\n        <ModalHeader >Submit Comment</ModalHeader>\n            <ModalBody>\n                    <LocalForm onSubmit={values => props.handleSubmit(values)}>  \n                            <div className=\"form-group\">\n                                <Label htmlFor=\"rating\" >Rating</Label>\n                                    <Control.select model=\".rating\" id=\"rating\" name=\"rating\"\n                                        className=\"form-control\" validators={{\n                                            onChange\n                                        }}>\n                                        <option>0</option>\n                                        <option>1</option>\n                                        <option>2</option>\n                                        <option>3</option>\n                                        <option>4</option>\n                                        <option>5</option>\n                                    </Control.select>\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".rating\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            onChange: 'Required'\n                                        }}\n                                    />                                 \n                            </div>\n\n                            <div className=\"form-group\">\n                                <Label htmlFor=\"author\" >Your Name</Label>\n                                <Control.text model=\".author\" id=\"author\" name=\"author\"\n                                        placeholder=\"Author\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, \n                                            minLength: minLength(2),\n                                            maxLength: maxLength(15)\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".author\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be at least 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                    />\n                            </div>\n                            <div className=\"form-group\">\n                                <Label htmlFor=\"text\" >Comment</Label>\n                                    <Control.textarea model=\".text\" id=\"text\" name=\"text\"\n                                        rows=\"6\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, \n                                            minLength: minLength(2)\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".text\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required'\n                                        }}\n                                    />\n                            </div>                           \n                            <div className=\"form-group\">\n                                    <Button type=\"submit\" color=\"primary\">\n                                        Submit\n                                    </Button>\n                            </div>                                          \n            </LocalForm>\n        </ModalBody>\n</Modal> \n    )\n}\n\n // Create the Selected campite method to show it after the user clicks \n  function RenderCampsite({campsite}) {\n        if (campsite) {\n            return (\n            <div className=\"col-md-5 m-1\">\n                    <Card>\n                        <CardImg top src={baseUrl + campsite.image} alt={campsite.name} />  \n                        <CardBody>\n                            <CardText>{campsite.description}</CardText>\n                        </CardBody>\n                    </Card>               \n            </div>\n            )\n        }\n    }\n\n    // Create a Comments method to iterate through the array of comments\n    function RenderComments({comments, addComment, campsiteId}) {    \n        if (comments) {\n        return (\n            <div className=\"col-md-5 m-1\">\n             <h4>Comments</h4>   \n              {\n              comments.map(comment => <div key={comment.id}>{comment.text} <br/>\n              {comment.author},&nbsp;\n               {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))} <br/> <br/>\n              </div>\n              )\n              }\n               <CommentForm campsiteId={campsiteId} addComment={addComment} />\n            </div>\n          );\n        }\n    } \n        \n\n   // Paint the Selected campsite and comments at the bottom of the screen\n   function CampsiteInfo(props) {\n    if (props.isLoading) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Loading />\n                </div>\n            </div>\n        );\n    }\n    if (props.errMess) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <h4>{props.errMess}</h4>\n                    </div>\n                </div>\n            </div>\n        );\n    }      \n    if (props.campsite) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <Breadcrumb>\n                            <BreadcrumbItem><Link to=\"/directory\">Directory</Link></BreadcrumbItem>\n                            <BreadcrumbItem active>{props.campsite.name}</BreadcrumbItem>\n                        </Breadcrumb>\n                        <h2>{props.campsite.name}</h2>\n                        <hr />\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <RenderCampsite campsite={props.campsite} />\n                    <RenderComments \n                        comments={props.comments}\n                        addComment={props.addComment}\n                        campsiteId={props.campsite.id}\n                    />\n                </div>\n            </div>\n        );\n    }\n    return <div />;\n}\n\nexport default CampsiteInfo;","/Users/Joe/Desktop/NucampFolder/3-React/nucampsite/src/shared/campsites.js",[],["112","113"],"/Users/Joe/Desktop/NucampFolder/3-React/nucampsite/src/components/MainComponent.js",[],"/Users/Joe/Desktop/NucampFolder/3-React/nucampsite/src/components/HeaderComponent.js",[],"/Users/Joe/Desktop/NucampFolder/3-React/nucampsite/src/components/FooterComponent.js",[],"/Users/Joe/Desktop/NucampFolder/3-React/nucampsite/src/components/HomeComponent.js",[],"/Users/Joe/Desktop/NucampFolder/3-React/nucampsite/src/components/ContactComponent.js",["114","115","116","117","118","119","120"],"import React, { Component } from 'react';\nimport { Breadcrumb, BreadcrumbItem,\n    Button, Label, Col, Row } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Control, Form, Errors } from 'react-redux-form';\n\nconst required = val => val && val.length;\nconst maxLength = len => val => !val || (val.length <= len);\nconst minLength = len => val => val && (val.length >= len);\nconst isNumber = val => !isNaN(+val);\nconst validEmail = val => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\nclass Contact extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            firstName: '',\n            lastName: '',\n            phoneNum: '',\n            email: '',\n            agree: false,\n            contactType: 'By Phone',\n            feedback: '',\n            touched: {\n                firstName: false,\n                lastName: false,\n                phoneNum: false,\n                email: false\n            }\n        };\n      \n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(values) {\n        console.log('Current State is: ' + JSON.stringify(values));\n        alert('Current State is: ' + JSON.stringify(values));\n        this.props.resetFeedbackForm();\n    }\n\n    render (){ \n            return (\n                <div className=\"container\">\n                    <div className=\"row\">\n                    <div className=\"col\">\n                            <Breadcrumb>\n                                <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                                <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n                            </Breadcrumb>\n                            <h2>Contact Us</h2>\n                            <hr />\n                        </div>\n                    </div>\n\n                    <div className=\"row row-content align-items-center\">\n                        <div className=\"col-sm-4\">\n                            <h5>Our Address</h5>\n                            <address>\n                                1 Nucamp Way<br />\n                                Seattle, WA 98001<br />\n                                U.S.A.\n                            </address>\n                        </div>\n                        <div className=\"col\">\n                            <a role=\"button\" className=\"btn btn-link\" href=\"tel:+12065551234\"><i className=\"fa fa-phone\" /> 1-206-555-1234</a><br />\n                            <a role=\"button\" className=\"btn btn-link\" href=\"mailto:fakeemail@fakeemail.co\"><i className=\"fa fa-envelope-o\" /> campsites@nucamp.co</a>\n                        </div>\n                    </div>\n                    <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h2>Send us your Feedback</h2>\n                        <hr />\n                    </div>\n                    <div className=\"col-md-10\">\n                        <Form model=\"feedbackForm\" onSubmit={values => this.handleSubmit(values)}> \n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"firstName\" md={2}>First Name</Label>\n                                <Col md={10}>\n                                <Control.text model=\".firstName\" id=\"firstName\" name=\"firstName\"\n                                        placeholder=\"First Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, \n                                            minLength: minLength(2),\n                                            maxLength: maxLength(15)\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".firstName\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be at least 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"lastName\" md={2}>Last Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".lastName\" id=\"lastName\" name=\"lastName\"\n                                        placeholder=\"Last Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            minLength: minLength(2),\n                                            maxLength: maxLength(15)\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".lastName\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be at least 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"phoneNum\" md={2}>Phone</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".phoneNum\" id=\"phoneNum\" name=\"phoneNum\"\n                                        placeholder=\"Phone number\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            minLength: minLength(10),\n                                            maxLength: maxLength(15),\n                                            isNumber\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".phoneNum\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be at least 10 numbers',\n                                            maxLength: 'Must be 15 numbers or less',\n                                            isNumber: 'Must be a number'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\n                                        placeholder=\"Email\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            validEmail\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".email\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            validEmail: 'Invalid email address'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>        \n                            <Row className=\"form-group\">\n                                <Col md={{size: 4, offset: 2}}>\n                                    <div className=\"form-check\">\n                                        <Label check>\n                                            <Control.checkbox\n                                                model=\".agree\"\n                                                name=\"agree\"\n                                                className=\"form-check-input\"\n                                            /> {' '}\n                                            <strong>May we contact you?</strong>\n                                        </Label>\n                                    </div>\n                                </Col>\n                                <Col md={4}>\n                                    <Control.select model=\".contactType\" name=\"contactType\"\n                                        className=\"form-control\">\n                                        <option>By Phone</option>\n                                        <option>By Email</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"feedback\" md={2}>Your Feedback</Label>\n                                <Col md={10}>\n                                    <Control.textarea model=\".feedback\" id=\"feedback\" name=\"feedback\"\n                                        rows=\"12\"\n                                        className=\"form-control\"\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size: 10, offset: 2}}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                        Send Feedback\n                                    </Button>\n                                </Col>\n                            </Row>                                          \n                        </Form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Contact;","/Users/Joe/Desktop/NucampFolder/3-React/nucampsite/src/shared/partners.js",[],"/Users/Joe/Desktop/NucampFolder/3-React/nucampsite/src/shared/promotions.js",[],"/Users/Joe/Desktop/NucampFolder/3-React/nucampsite/src/shared/comments.js",[],["121","122"],"/Users/Joe/Desktop/NucampFolder/3-React/nucampsite/src/components/AboutComponent.js",[],"/Users/Joe/Desktop/NucampFolder/3-React/nucampsite/src/redux/configureStore.js",[],"/Users/Joe/Desktop/NucampFolder/3-React/nucampsite/src/redux/promotions.js",[],"/Users/Joe/Desktop/NucampFolder/3-React/nucampsite/src/redux/campsites.js",[],"/Users/Joe/Desktop/NucampFolder/3-React/nucampsite/src/redux/partners.js",[],"/Users/Joe/Desktop/NucampFolder/3-React/nucampsite/src/redux/comments.js",[],"/Users/Joe/Desktop/NucampFolder/3-React/nucampsite/src/redux/ActionCreators.js",[],"/Users/Joe/Desktop/NucampFolder/3-React/nucampsite/src/redux/ActionTypes.js",[],"/Users/Joe/Desktop/NucampFolder/3-React/nucampsite/src/components/LoadingComponent.js",[],"/Users/Joe/Desktop/NucampFolder/3-React/nucampsite/src/redux/forms.js",[],"/Users/Joe/Desktop/NucampFolder/3-React/nucampsite/src/shared/baseUrl.js",[],{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","severity":1,"message":"128","line":66,"column":37,"nodeType":"129","endLine":69,"endColumn":44},{"ruleId":"127","severity":1,"message":"130","line":90,"column":33,"nodeType":"129","endLine":98,"endColumn":39},{"ruleId":"127","severity":1,"message":"131","line":113,"column":37,"nodeType":"129","endLine":120,"endColumn":39},{"ruleId":"123","replacedBy":"132"},{"ruleId":"125","replacedBy":"133"},{"ruleId":"127","severity":1,"message":"130","line":80,"column":33,"nodeType":"129","endLine":88,"endColumn":39},{"ruleId":"127","severity":1,"message":"130","line":105,"column":37,"nodeType":"129","endLine":113,"endColumn":39},{"ruleId":"127","severity":1,"message":"130","line":130,"column":37,"nodeType":"129","endLine":139,"endColumn":39},{"ruleId":"127","severity":1,"message":"130","line":157,"column":37,"nodeType":"129","endLine":164,"endColumn":39},{"ruleId":"127","severity":1,"message":"134","line":181,"column":45,"nodeType":"129","endLine":185,"endColumn":47},{"ruleId":"127","severity":1,"message":"128","line":191,"column":37,"nodeType":"129","endLine":192,"endColumn":66},{"ruleId":"127","severity":1,"message":"131","line":201,"column":37,"nodeType":"129","endLine":204,"endColumn":39},{"ruleId":"123","replacedBy":"135"},{"ruleId":"125","replacedBy":"136"},"no-native-reassign",["137"],"no-negated-in-lhs",["138"],"react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE",["137"],["138"],"Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE",["137"],["138"],"no-global-assign","no-unsafe-negation"]