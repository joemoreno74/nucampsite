[{"/Users/Joe/Desktop/NucampFolder/3-React/nucampsite/src/index.js":"1","/Users/Joe/Desktop/NucampFolder/3-React/nucampsite/src/reportWebVitals.js":"2","/Users/Joe/Desktop/NucampFolder/3-React/nucampsite/src/App.js":"3","/Users/Joe/Desktop/NucampFolder/3-React/nucampsite/src/components/DirectoryComponent.js":"4","/Users/Joe/Desktop/NucampFolder/3-React/nucampsite/src/components/CampsiteInfoComponent.js":"5","/Users/Joe/Desktop/NucampFolder/3-React/nucampsite/src/shared/campsites.js":"6","/Users/Joe/Desktop/NucampFolder/3-React/nucampsite/src/components/MainComponent.js":"7","/Users/Joe/Desktop/NucampFolder/3-React/nucampsite/src/components/HeaderComponent.js":"8","/Users/Joe/Desktop/NucampFolder/3-React/nucampsite/src/components/FooterComponent.js":"9","/Users/Joe/Desktop/NucampFolder/3-React/nucampsite/src/components/HomeComponent.js":"10","/Users/Joe/Desktop/NucampFolder/3-React/nucampsite/src/components/ContactComponent.js":"11","/Users/Joe/Desktop/NucampFolder/3-React/nucampsite/src/shared/partners.js":"12","/Users/Joe/Desktop/NucampFolder/3-React/nucampsite/src/shared/promotions.js":"13","/Users/Joe/Desktop/NucampFolder/3-React/nucampsite/src/shared/comments.js":"14","/Users/Joe/Desktop/NucampFolder/3-React/nucampsite/src/components/AboutComponent.js":"15","/Users/Joe/Desktop/NucampFolder/3-React/nucampsite/src/redux/configureStore.js":"16","/Users/Joe/Desktop/NucampFolder/3-React/nucampsite/src/redux/promotions.js":"17","/Users/Joe/Desktop/NucampFolder/3-React/nucampsite/src/redux/campsites.js":"18","/Users/Joe/Desktop/NucampFolder/3-React/nucampsite/src/redux/partners.js":"19","/Users/Joe/Desktop/NucampFolder/3-React/nucampsite/src/redux/comments.js":"20"},{"size":696,"mtime":1609146590595,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1608544218159,"results":"23","hashOfConfig":"22"},{"size":640,"mtime":1610013452020,"results":"24","hashOfConfig":"22"},{"size":1396,"mtime":1609602429602,"results":"25","hashOfConfig":"22"},{"size":8207,"mtime":1610354810419,"results":"26","hashOfConfig":"22"},{"size":1242,"mtime":1609239800589,"results":"27","hashOfConfig":"22"},{"size":2289,"mtime":1610013771857,"results":"28","hashOfConfig":"22"},{"size":5223,"mtime":1610210452035,"results":"29","hashOfConfig":"22"},{"size":1914,"mtime":1609151291785,"results":"30","hashOfConfig":"22"},{"size":950,"mtime":1609240418257,"results":"31","hashOfConfig":"22"},{"size":11097,"mtime":1610310767177,"results":"32","hashOfConfig":"22"},{"size":1054,"mtime":1609239844258,"results":"33","hashOfConfig":"22"},{"size":303,"mtime":1609239849048,"results":"34","hashOfConfig":"22"},{"size":4243,"mtime":1609239831328,"results":"35","hashOfConfig":"22"},{"size":4094,"mtime":1609610907213,"results":"36","hashOfConfig":"22"},{"size":482,"mtime":1610394693747,"results":"37","hashOfConfig":"22"},{"size":190,"mtime":1610394612722,"results":"38","hashOfConfig":"22"},{"size":186,"mtime":1610394404757,"results":"39","hashOfConfig":"22"},{"size":182,"mtime":1610394584255,"results":"40","hashOfConfig":"22"},{"size":182,"mtime":1610394568216,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1xai3ta",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"/Users/Joe/Desktop/NucampFolder/3-React/nucampsite/src/index.js",[],["86","87"],"/Users/Joe/Desktop/NucampFolder/3-React/nucampsite/src/reportWebVitals.js",[],"/Users/Joe/Desktop/NucampFolder/3-React/nucampsite/src/App.js",[],"/Users/Joe/Desktop/NucampFolder/3-React/nucampsite/src/components/DirectoryComponent.js",[],"/Users/Joe/Desktop/NucampFolder/3-React/nucampsite/src/components/CampsiteInfoComponent.js",["88","89","90"],"import React, { Component }  from 'react';\nimport { Card, CardImg, CardText, CardBody, Breadcrumb, BreadcrumbItem, Button,\n    Modal, ModalHeader, ModalBody, Label  } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPencilAlt } from '@fortawesome/free-solid-svg-icons';\nimport { Link } from 'react-router-dom';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\n\nconst required = val => val && val.length;\nconst maxLength = len => val => !val || (val.length <= len);\nconst minLength = len => val => val && (val.length >= len);\nconst onChange = val => val && val > \"0\";\n\n\nclass CommentForm extends Component {\n    constructor(props) {\n        super(props);\n     this.state = {\n            rating: '',\n            author: '',\n            text: '',\n            touched: {\n                author: false,\n            },\n        isModalOpen: false \n        };     \n    }\n\n    toggleModal = () => {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n    }\n\n\n    handleSubmit = (values) => {\n                console.log(\"Current state is: \" + JSON.stringify(values));\n                alert(\"Current state is: \" + JSON.stringify(values));\n            }\n\n\n    render (){ \n        return (\n            <React.Fragment>\n                <Button outline className=\"fa-lg\" onClick={this.toggleModal}><FontAwesomeIcon icon={faPencilAlt} />{'  '}Submit Comment</Button>  \n                <ShowModal state={this.state} handleSubmit={this.handleSubmit} />\n            </React.Fragment>\n\n        )         \n    } \n\n}\n\n\nfunction ShowModal(props) {\n    return (\n    <Modal isOpen={props.state.isModalOpen}>\n        <ModalHeader >Submit Comment</ModalHeader>\n            <ModalBody>\n                    <LocalForm onSubmit={values => props.handleSubmit(values)}>  \n                            <div className=\"form-group\">\n                                <Label htmlFor=\"rating\" >Rating</Label>\n                                    <Control.select model=\".rating\" id=\"rating\" name=\"rating\"\n                                        className=\"form-control\" validators={{\n                                            onChange\n                                        }}>\n                                        <option>0</option>\n                                        <option>1</option>\n                                        <option>2</option>\n                                        <option>3</option>\n                                        <option>4</option>\n                                        <option>5</option>\n                                    </Control.select>\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".rating\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            onChange: 'Required'\n                                        }}\n                                    />                                 \n                            </div>\n\n                            <div className=\"form-group\">\n                                <Label htmlFor=\"author\" >Your Name</Label>\n                                <Control.text model=\".author\" id=\"author\" name=\"author\"\n                                        placeholder=\"Author\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, \n                                            minLength: minLength(2),\n                                            maxLength: maxLength(15)\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".author\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be at least 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                    />\n                            </div>\n                            <div className=\"form-group\">\n                                <Label htmlFor=\"text\" >Comment</Label>\n                                    <Control.textarea model=\".text\" id=\"text\" name=\"text\"\n                                        rows=\"6\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, \n                                            minLength: minLength(2)\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".text\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required'\n                                        }}\n                                    />\n                            </div>                           \n                            <div className=\"form-group\">\n                                    <Button type=\"submit\" color=\"primary\">\n                                        Submit\n                                    </Button>\n                            </div>                                          \n            </LocalForm>\n        </ModalBody>\n</Modal> \n    )\n}\n\n // Create the Selected campite method to show it after the user clicks \n  function RenderCampsite({campsite}) {\n        if (campsite) {\n            return (\n            <div className=\"col-md-5 m-1\">\n                    <Card>\n                        <CardImg top src={campsite.image} alt={campsite.name} />\n                        <CardBody>\n                            <CardText>{campsite.description}</CardText>\n                        </CardBody>\n                    </Card>               \n            </div>\n            )\n        }\n    }\n\n    // Create a Comments method to iterate through the array of comments\n    function RenderComments({comments}) {      \n        if (comments) {\n        return (\n            <div className=\"col-md-5 m-1\">\n             <h4>Comments</h4>   \n              {\n              comments.map(comment => <div key={comment.id}>{comment.text} <br/>\n              {comment.author},&nbsp;\n               {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))} <br/> <br/>\n              </div>\n              )\n              }\n               <CommentForm />\n            </div>\n          );\n        }\n    } \n        \n\n   // Paint the Selected campsite and comments at the bottom of the screen\n   function CampsiteInfo(props) {\n    if (props.campsite) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <Breadcrumb>\n                            <BreadcrumbItem><Link to=\"/directory\">Directory</Link></BreadcrumbItem>\n                            <BreadcrumbItem active>{props.campsite.name}</BreadcrumbItem>\n                        </Breadcrumb>\n                        <h2>{props.campsite.name}</h2>\n                        <hr />\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <RenderCampsite campsite={props.campsite} />\n                    <RenderComments comments={props.comments} />\n                </div>\n            </div>\n        );\n    }\n    return <div />;\n}\n\nexport default CampsiteInfo;","/Users/Joe/Desktop/NucampFolder/3-React/nucampsite/src/shared/campsites.js",[],["91","92"],"/Users/Joe/Desktop/NucampFolder/3-React/nucampsite/src/components/MainComponent.js",[],"/Users/Joe/Desktop/NucampFolder/3-React/nucampsite/src/components/HeaderComponent.js",[],"/Users/Joe/Desktop/NucampFolder/3-React/nucampsite/src/components/FooterComponent.js",[],"/Users/Joe/Desktop/NucampFolder/3-React/nucampsite/src/components/HomeComponent.js",[],"/Users/Joe/Desktop/NucampFolder/3-React/nucampsite/src/components/ContactComponent.js",["93","94","95","96","97","98","99"],"import React, { Component } from 'react';\nimport { Breadcrumb, BreadcrumbItem,\n    Button, Label, Col, Row } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\n\nconst required = val => val && val.length;\nconst maxLength = len => val => !val || (val.length <= len);\nconst minLength = len => val => val && (val.length >= len);\nconst isNumber = val => !isNaN(+val);\nconst validEmail = val => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\nclass Contact extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            firstName: '',\n            lastName: '',\n            phoneNum: '',\n            email: '',\n            agree: false,\n            contactType: 'By Phone',\n            feedback: '',\n            touched: {\n                firstName: false,\n                lastName: false,\n                phoneNum: false,\n                email: false\n            }\n        };\n      \n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(values) {\n        console.log(\"Current state is: \" + JSON.stringify(values));\n        alert(\"Current state is: \" + JSON.stringify(values));\n    }\n\n    render (){ \n            return (\n                <div className=\"container\">\n                    <div className=\"row\">\n                    <div className=\"col\">\n                            <Breadcrumb>\n                                <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                                <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n                            </Breadcrumb>\n                            <h2>Contact Us</h2>\n                            <hr />\n                        </div>\n                    </div>\n\n                    <div className=\"row row-content align-items-center\">\n                        <div className=\"col-sm-4\">\n                            <h5>Our Address</h5>\n                            <address>\n                                1 Nucamp Way<br />\n                                Seattle, WA 98001<br />\n                                U.S.A.\n                            </address>\n                        </div>\n                        <div className=\"col\">\n                            <a role=\"button\" className=\"btn btn-link\" href=\"tel:+12065551234\"><i className=\"fa fa-phone\" /> 1-206-555-1234</a><br />\n                            <a role=\"button\" className=\"btn btn-link\" href=\"mailto:fakeemail@fakeemail.co\"><i className=\"fa fa-envelope-o\" /> campsites@nucamp.co</a>\n                        </div>\n                    </div>\n                    <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h2>Send us your Feedback</h2>\n                        <hr />\n                    </div>\n                    <div className=\"col-md-10\">\n                        <LocalForm onSubmit={values => this.handleSubmit(values)}>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"firstName\" md={2}>First Name</Label>\n                                <Col md={10}>\n                                <Control.text model=\".firstName\" id=\"firstName\" name=\"firstName\"\n                                        placeholder=\"First Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, \n                                            minLength: minLength(2),\n                                            maxLength: maxLength(15)\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".firstName\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be at least 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"lastName\" md={2}>Last Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".lastName\" id=\"lastName\" name=\"lastName\"\n                                        placeholder=\"Last Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            minLength: minLength(2),\n                                            maxLength: maxLength(15)\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".lastName\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be at least 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"phoneNum\" md={2}>Phone</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".phoneNum\" id=\"phoneNum\" name=\"phoneNum\"\n                                        placeholder=\"Phone number\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            minLength: minLength(10),\n                                            maxLength: maxLength(15),\n                                            isNumber\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".phoneNum\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be at least 10 numbers',\n                                            maxLength: 'Must be 15 numbers or less',\n                                            isNumber: 'Must be a number'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\n                                        placeholder=\"Email\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            validEmail\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".email\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            validEmail: 'Invalid email address'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>        \n                            <Row className=\"form-group\">\n                                <Col md={{size: 4, offset: 2}}>\n                                    <div className=\"form-check\">\n                                        <Label check>\n                                            <Control.checkbox\n                                                model=\".agree\"\n                                                name=\"agree\"\n                                                className=\"form-check-input\"\n                                            /> {' '}\n                                            <strong>May we contact you?</strong>\n                                        </Label>\n                                    </div>\n                                </Col>\n                                <Col md={4}>\n                                    <Control.select model=\".contactType\" name=\"contactType\"\n                                        className=\"form-control\">\n                                        <option>By Phone</option>\n                                        <option>By Email</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"feedback\" md={2}>Your Feedback</Label>\n                                <Col md={10}>\n                                    <Control.textarea model=\".feedback\" id=\"feedback\" name=\"feedback\"\n                                        rows=\"12\"\n                                        className=\"form-control\"\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size: 10, offset: 2}}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                        Send Feedback\n                                    </Button>\n                                </Col>\n                            </Row>                                          \n                        </LocalForm>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Contact;","/Users/Joe/Desktop/NucampFolder/3-React/nucampsite/src/shared/partners.js",[],"/Users/Joe/Desktop/NucampFolder/3-React/nucampsite/src/shared/promotions.js",[],"/Users/Joe/Desktop/NucampFolder/3-React/nucampsite/src/shared/comments.js",[],"/Users/Joe/Desktop/NucampFolder/3-React/nucampsite/src/components/AboutComponent.js",[],"/Users/Joe/Desktop/NucampFolder/3-React/nucampsite/src/redux/configureStore.js",[],"/Users/Joe/Desktop/NucampFolder/3-React/nucampsite/src/redux/promotions.js",[],"/Users/Joe/Desktop/NucampFolder/3-React/nucampsite/src/redux/campsites.js",[],"/Users/Joe/Desktop/NucampFolder/3-React/nucampsite/src/redux/partners.js",[],"/Users/Joe/Desktop/NucampFolder/3-React/nucampsite/src/redux/comments.js",[],{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":63,"column":37,"nodeType":"106","endLine":66,"endColumn":44},{"ruleId":"104","severity":1,"message":"107","line":87,"column":33,"nodeType":"106","endLine":95,"endColumn":39},{"ruleId":"104","severity":1,"message":"108","line":110,"column":37,"nodeType":"106","endLine":117,"endColumn":39},{"ruleId":"100","replacedBy":"109"},{"ruleId":"102","replacedBy":"110"},{"ruleId":"104","severity":1,"message":"107","line":79,"column":33,"nodeType":"106","endLine":87,"endColumn":39},{"ruleId":"104","severity":1,"message":"107","line":104,"column":37,"nodeType":"106","endLine":112,"endColumn":39},{"ruleId":"104","severity":1,"message":"107","line":129,"column":37,"nodeType":"106","endLine":138,"endColumn":39},{"ruleId":"104","severity":1,"message":"107","line":156,"column":37,"nodeType":"106","endLine":163,"endColumn":39},{"ruleId":"104","severity":1,"message":"111","line":180,"column":45,"nodeType":"106","endLine":184,"endColumn":47},{"ruleId":"104","severity":1,"message":"105","line":190,"column":37,"nodeType":"106","endLine":191,"endColumn":66},{"ruleId":"104","severity":1,"message":"108","line":200,"column":37,"nodeType":"106","endLine":203,"endColumn":39},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE",["112"],["113"],"Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE","no-global-assign","no-unsafe-negation"]